book: {{uuid}}
<div id="title"></div>
<select id="toc"></select>
<div id="viewer" class="spreads"></div>
<a id="prev" href="#prev" class="arrow">‹</a>
<a id="next" href="#next" class="arrow">›</a>

<script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.5/jszip.min.js"></script>
<script src="/js/epub.js"></script>

<script>
  let book = ePub("/book/{{uuid}}/book.epub");
  let rendition = book.renderTo("viewer", {width: '100%', height: '500px'});
  let displayed = rendition.display();

  book.ready.then(() => {
    const next = document.getElementById('next');
    next.addEventListener('click', e => {
      book.package.metadata.direction === 'rtl' ?
        rendition.prev() : rendition.next();
      e.preventDefault();
    }, false);

    const prev = document.getElementById('prev');
    prev.addEventListener('click', e => {
      book.package.metadata.direction === 'rtl' ?
        rendition.next() : rendition.prev();
      e.preventDefault();
    }, false);

    let keyListener = function(e) {
      // Left key
      if ((e.keyCode || e.which) == 37) {
        book.package.metadata.direction === 'rtl' ?
          rendition.next() : rendition.prev();
      }

      // Right key
      if ((e.keyCode || e.which) == 39) {
        book.package.metadata.direction === 'rtl' ?
          rendition.prev() : rendition.next();
      }
    };

    rendition.on('keyup', keyListener);
    document.addEventListener('keyup', keyListener, false);

  });

  const title = document.getElementById('title');

  rendition.on('rendered', function(section) {
    const current = book.navigation && book.navigation.get(section.href);

    if (current) {
      const $select = document.getElementById('toc');
      const $selected = $select.querySelector('option[selected]');
      if ($selected) {
        $selected.removeAttribute('selected');
      }

      const $options = $select.querySelectorAll('options');
      for (let i = 0; i < $options.length; ++i) {
        let $selected = $options[i].getAttribute('ref') === current.href;
        if (selected) {
          $options[i].setAttribute('selected', '');
        }
      }
    }
  });

  rendition.on('relocated', function(location) {
    console.log(location);

    const next = book.package.metadata.direction === 'rtl' ?
      document.getElementById('prev') : document.getElementById('next');

    const prev = book.package.metadata.direction === 'rtl' ?
      document.getElementById('next') : document.getElementById('prev');

    if (location.atEnd) {
      next.style.visibility = 'hidden';
    } else {
      next.style.visibility = 'visible';
    }

    if (location.atStart) {
      prev.style.visibility = 'hidden';
    } else {
      prev.style.visibility = 'visible';
    }
  });

  rendition.on('layout', layout => {
    const viewer = document.getElementById('viewer');

    if (layout.spread) {
      viewer.classList.remove('single');
    } else {
      viewer.classList.add('single');
    }
  });

  window.addEventListener('unload', function () {
    console.log('unloading');
    this.book.destroy();
  });

  book.loaded.navigation.then(function (toc) {
    const $select = document.getElementById('toc'),
      docfrag = document.createDocumentFragment();

    toc.forEach(function(chapter) {
      const option = document.createElement('option');
      option.textContent = chapter.label;
      option.setAttribute('ref', chapter.href);
      docfrag.appendChild(option);
    });

    $select.appendChild(docfrag);

    $select.onchange = function() {
      const index = $select.selectedIndex,
        url = $select.options[index].getAttribute('ref');
      rendition.display(url);
      return false;
    };
  });
</script>

